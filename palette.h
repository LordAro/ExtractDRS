/*
 * This file is part of ExtractDRS.
 * ExtractDRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * ExtractDRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with ExtractDRS. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef PALETTE_H
#define PALETTE_H

#include "slp.h"

#define M(r, g, b) {r, g, b}
static const uint8 bmp_palette[][3] = {
	M(  0,   0,   0), // Black 0
	M(  0,  74, 161),
	M(  0,  97, 155),
	M(  0,  74, 187),
	M(  0,  84, 176),
	M(  0,  90, 184),
	M(  0, 110, 176),
	M(  0, 110, 187),
	M(180, 255, 180),
	M(  0,  98, 210),
	M(  0,   0,   0), // 10
	M( 47,  47,  47),
	M(200, 216, 255),
	M( 87,  87,  87),
	M( 37,  16,   6),
	M( 47,  26,  17),
	M(  0,   0,  82),
	M(  0,  21, 130),
	M( 19,  49, 161),
	M( 48,  93, 182),
	M( 74, 121, 208), // 20
	M(110, 166, 235),
	M(151, 206, 255),
	M(205, 250, 255),
	M( 64,  43,  23),
	M( 67,  51,  27),
	M( 70,  32,   6),
	M( 75,  57,  42),
	M( 84,  64,  43),
	M( 87,  69,  37),
	M( 87,  57,  27), // 30
	M( 94,  74,  48),
	M( 65,   0,   0),
	M(105,  11,   0),
	M(160,  21,   0),
	M(230,  11,   0),
	M(255,   0,   0),
	M(255, 100, 100),
	M(255, 160, 160),
	M(255, 220, 220),
	M( 97,  77,  67), // 40
	M(103,  58,  21),
	M(113,  75,  51),
	M(113,  75,  13),
	M(115, 105,  84),
	M(125,  97,  72),
	M(125,  74,   0),
	M(129, 116,  95),
	M(  0,   0,   0),
	M(  0,   7,   0),
	M(  0,  32,   0), // 50
	M(  0,  59,   0),
	M(  0,  87,   0),
	M(  0, 114,   0),
	M(  0, 141,   0),
	M(  0, 169,   0),
	M(134, 126, 118), // Shadow colour - 56
	M(135,  64,   0),
	M(136, 108,  79),
	M(144, 100,  12),
	M(146, 125, 105), // 60
	M(153, 106,  55),
	M(159, 121,  88),
	M(166,  74,   0),
	M( 80,  51,  26),
	M(140,  78,   9),
	M(191, 123,   0),
	M(255, 199,   0),
	M(255, 247,  37),
	M(255, 255,  97),
	M(255, 255, 166), // 70
	M(255, 255, 227),
	M(167, 135, 102),
	M(172, 144, 115),
	M(175, 126,  36),
	M(175, 151, 128),
	M(185, 151, 146),
	M(186, 166, 135),
	M(187,  84,   0),
	M(187, 156, 125),
	M(110,  23,   0), // 80
	M(150,  36,   0),
	M(210,  55,   0),
	M(255,  80,   0),
	M(255, 130,   1),
	M(255, 180,  21),
	M(255, 210,  75),
	M(255, 235, 160),
	M(189, 150, 111),
	M(191, 169, 115),
	M(195, 174, 156), // 90
	M(196, 170, 146),
	M(196, 128,  88),
	M(196, 166, 135),
	M(197, 187, 176),
	M(204, 160,  36),
	M(  0,  16,  16),
	M(  0,  37,  41),
	M(  0,  80,  80),
	M(  0, 120, 115),
	M(  0, 172, 150), // 100
	M( 38, 223, 170),
	M(109, 252, 191),
	M(186, 255, 222),
	M(206, 169, 133),
	M(207, 105,  12),
	M(207, 176, 156),
	M(228, 162,  82),
	M(215, 186, 155),
	M(216, 162, 121),
	M(217, 114,  24), // 110
	M(223, 234, 255),
	M( 47,   0,  46),
	M( 79,   0,  75),
	M(133,  12, 121),
	M(170,  47, 155),
	M(211,  58, 201),
	M(241, 108, 232),
	M(255, 169, 255),
	M(255, 210, 255),
	M(218, 156, 105), // 120
	M(222, 177, 136),
	M(225, 177,  90),
	M(226, 195, 170),
	M(232, 180, 120),
	M(235, 202, 181),
	M(235, 216, 190),
	M(237, 199, 165),
	M( 28,  28,  28),
	M( 67,  67,  67),
	M(106, 106, 106), // 130
	M(145, 145, 145),
	M(185, 185, 185),
	M(223, 223, 223),
	M(247, 247, 247),
	M(255, 255,   0),
	M(247, 211, 191),
	M(248, 201, 138),
	M(255, 206, 157),
	M(255, 225, 201),
	M(255, 238, 217), // 140
	M(255, 226, 161),
	M(216, 223, 255),
	M(255, 255, 243),
	M( 24,  24,   0),
	M( 37,  37,  17),
	M( 27,  47,   0),
	M( 47,  57,  17),
	M( 67,  77,   7),
	M( 77,  77,  47),
	M( 44,  77,   3), // 150
	M( 94,  84,  53),
	M( 95,  97,  39),
	M( 97,  97,  67),
	M( 67,  97,  29),
	M(106, 115,  57),
	M(116, 115,  75),
	M( 87, 116,   7),
	M(118, 130,  65),
	M(130, 136,  77),
	M(138, 139,  87), // 160
	M(148, 155, 100),
	M(156, 156, 139),
	M(128, 157,  84),
	M(149, 166,  97),
	M(175, 165, 106),
	M(176, 176, 159),
	M(146, 176,  67),
	M(194, 190, 148),
	M(165, 196, 108),
	M(166, 196,  77), // 170
	M(206, 187, 128),
	M(206, 204, 155),
	M(204, 217,  77),
	M(221, 218, 166),
	M(196, 226, 116),
	M(243, 170,  92),
	M(  3,  28,   0),
	M(  7,  38,   0),
	M(  7,  47,   7),
	M( 19,  48,   0), // 180
	M( 27,  57,  17),
	M( 47,  57,  47),
	M( 28,  62,   0),
	M( 14,  68,  14),
	M( 41,  69,  28),
	M( 33,  73,  18),
	M( 47,  87,  47),
	M( 77,  97,  57),
	M( 67,  97,  67),
	M( 87, 116,  77), // 190
	M( 70, 119,  48),
	M(189, 209, 253),
	M(106, 136,  97),
	M(196, 236, 166),
	M( 23,  53,  33),
	M( 43,  84,  64),
	M( 37, 116,  57),
	M( 23,  43,  53),
	M(  2,  33,  53),
	M(  2,  23,  53), // 200
	M( 33,  64,  64),
	M(  0,  34,  97),
	M(  0,  51, 115),
	M( 43,  64,  74),
	M(  0,  43,  74),
	M(  4,   6,   9),
	M(  0, 123, 189),
	M( 64,  84,  84),
	M(  0, 115, 207),
	M( 23,  23,  74), // 210
	M( 12,  23,  64),
	M(255, 177,  98),
	M(  0,  64, 125),
	M(  2,  23,  84),
	M(  0, 138, 186),
	M( 64, 105, 105),
	M(  0, 146, 197),
	M( 94, 105, 105),
	M(  0,  74, 125),
	M(  0, 125, 207), // 220
	M( 95, 133,  65),
	M( 84, 115, 125),
	M( 64, 105, 125),
	M(  0,  64, 146),
	M(  0,  53, 135),
	M(115, 156, 156),
	M( 84, 146, 176),
	M(146, 176, 187),
	M(255, 201, 121),
	M(105, 166, 197), // 230
	M(125, 197, 217),
	M(156, 197, 217),
	M(109, 126,  33),
	M(113, 153,  36),
	M( 21, 118,  21),
	M( 51, 151,  39),
	M( 70, 181,  59),
	M( 89, 223,  89),
	M(131, 245, 120),
	M(152, 192, 240), // 240
	M(  0, 255,   0),
	M(  0,   0, 255), // Outline colour - 242
	M(255, 255,   0),
	M(255, 217,   0),
	M(240, 240, 255),
	M(240, 247, 255),
	M(247, 247, 255),
	M(247, 255, 255),
	M( 85, 119,  52),
	M(129, 151,  49), // 250
	M(  0, 255, 255),
	M(255,   0, 255),
	M(  0, 139, 210),
	M(  0, 160, 243),
	M(255, 255, 255), // 255
};
#undef M

#endif /* PALETTE_H */
